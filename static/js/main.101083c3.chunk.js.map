{"version":3,"sources":["layout/Header/assets/logo.svg","assets/img/main-bg.png","styles/variables.js","layout/Header/HeaderStyles.js","layout/Header/Header.jsx","layout/Header/index.js","config/config.js","config/helpers.js","config/Api.js","layout/Footer/FooterStyles.js","layout/Footer/Footer.jsx","layout/Footer/index.js","styles/helpers.js","components/CurrencyRow/CurrencyRowStyles.js","components/CurrencyRow/CurrencyRow.jsx","components/CurrencyRow/index.js","components/CurrenciesPairs/CurrenciesPairsStyles.js","components/CurrenciesPairs/CurrenciesPairs.jsx","components/CurrenciesPairs/index.js","styles/buttons.js","components/SearchInputSuggestBox/SearchInputSuggestBoxStyles.jsx","components/SearchInputSuggestBox/SearchInputSuggestBox.jsx","components/SearchInputSuggestBox/index.js","components/SearchInput/SearchInputStyles.jsx","components/SearchInput/SearchInput.jsx","components/SearchInput/index.js","components/AddNewCurrency/AddNewCurrencyStyles.js","components/AddNewCurrency/index.js","components/AddNewCurrency/AddNewCurrency.jsx","components/Notification/NotificationStyles.jsx","components/Notification/Notification.jsx","components/Notification/index.js","components/NotificationList/NotificationListStyles.jsx","components/NotificationList/NotificationList.jsx","components/NotificationList/index.js","config/notification-types.js","layout/Main/MainStyles.js","layout/Main/Main.jsx","layout/Main/index.js","components/App/AppStyles.js","components/App/index.js","components/App/App.jsx","index.js"],"names":["module","exports","variables","colorBackgroundMain","colorFontFirst","colorFontSecond","colorGradient","colorGradientInvert","closeButtonGradient","colorNoteBackgroundWarning","colorNoteBackgroundError","colorNoteBackgroundSuccess","colorNoteTextWarning","colorNoteTextError","colorNoteTextSuccess","deepBlue","green","white","red","trueRed","gay","lightGay","extraSmallFont","smallFont","middleFont","largeFont","extraLargeFont","widthContainerLarge","widthContainerSmall","paddingSmall","paddingMiddle","paddingLarge","lineHeight","lineHeightMiddle","borderRadius","boxShadow","boxShadowSmall","boxShadowXSmall","boxShadowSmallInvert","HeaderStyles","main","width","color","maxWidth","padding","textAlign","logo","height","mainDesktop","fontSize","mainMobile","Header","deviceType","style","src","alt","defaultName","defaultProps","Config","isDev","window","location","hostname","apiUrl","affiliateLink","name","link","breakpoint","currencies","fiat","shortName","code","crypto","Helpers","prefix","number","Math","floor","random","toString","this","change","price","percents","result","replace","toFixed","convertedPrice","firstPart","split","reverse","join","match","map","item","shift","currencyCoinOne","currencyCoinTwo","baseCoin","toLowerCase","targetCoin","fetch","method","then","resp","json","id","base","target","_prettyPriceFormat","changePercents","_countPercentage","changeUp","_changeUpDetection","FooterStyles","footer","text","fontWeight","Api","getAffiliateLink","Footer","href","rel","helpers","textCenter","CurrencyRowStyles","row","titleLarge","verticalAlign","titleLargeDesktop","titleLargeMobile","textDesktop","textMobile","smallText","paddingLeft","smallTextDesktop","smallTextMobile","arrow","position","changeMobile","display","closeButton","margin","border","cursor","top","opacity","background","CurrencyRow","props","mountStyle","setState","prevState","animateStyle","unMountStyle","removeCurrenciesPair","removeParentMethod","hideRemoveButton","setTimeout","animationDuration","state","transition","changeIndicator","icon","styles","visibility","onClick","e","React","Component","CurrenciesPairsStyles","table","minWidth","spinnerWrapper","spinner","tableWrapperDesktop","tableWrapperMobile","overflowX","boxSizing","errorMsg","CurrenciesPairs","showThrobber","currenciesPairs","hasError","currenciesRow","key","length","colSpan","spin","button","gradientMiddle","backgroundImage","backgroundPosition","backgroundSize","textTransform","SearchInputSuggestBoxStyles","list","borderBottomRightRadius","borderBottomLeftRadius","overflowY","left","zIndex","listDesktop","maxHeight","listMobile","itemPointer","SearchInputSuggestBox","setActiveItemState","newState","activeItem","setHoverStyle","listItems","forEach","index","backgroundColor","calcList","items","inputValue","reg","RegExp","toLocaleLowerCase","newItems","filter","test","search","itemsForShowing","selectItemInCoinList","moveDirection","click","showSuggestBox","nextProps","keyboardButtonsActive","setSelectedItem","ref","el","onMouseEnter","SearchInputStyles","fieldSet","input","SearchInput","handleChange","event","value","handleKeyboard","preventDefault","focusInputStatus","isFocus","clearInput","coinName","fullCurrencyName","setValue","label","placeholder","onFocus","onBlur","onChange","onKeyDown","type","AddCurrenciesListStyles","formMobile","formDesktop","form","flexGrow","fieldSetMobile","marginBottom","fieldSetDesktop","marginRight","buttonMobile","buttonDesktop","AddNewCurrency","addNewCurrenciesPair","eventType","isFirstPartEvent","cssProperty","animationOptions","easing","iterations","fill","duration","animate","setCoin","baseCurrencies","targetCurrencies","isBaseCoin","buttons","onMouseOver","buttonAnimation","onMouseLeave","onMouseDown","onMouseUp","NotificationStyles","wrapper","overflow","justifyContent","container","alignItems","warningType","errorType","successType","warningSign","errorSign","sign","transform","right","Notification","dismissTimeout","dismiss","content","NotificationListStyles","bottom","NotificationList","notifications","transitionName","transitionEnterTimeout","transitionLeaveTimeout","noteParams","NotificationTypes","success","warning","error","MainStyles","saveButton","buttonWrapper","containerDesktop","containerMobile","Main","hasSamePair","showNotification","currencyRate","catch","newPair","statePair","dismissNotification","notificationId","handleClickSaveButton","localStorage","setItem","JSON","stringify","setStartedCurrencies","pairs","getItem","parse","pair","notificationText","typeStyles","NotificationsType","notice","oldNotifications","baseList","getBaseCurrenciesList","targetList","getTargetCurrenciesList","AppStyles","flexDirection","minHeight","mainBg","fontFamily","App","getDeviceType","innerWidth","windowWidth","addEventListener","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.101083c3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.53155019.svg\";","module.exports = __webpack_public_path__ + \"static/media/main-bg.ebc94bc1.png\";","const variables = {\n    // COLORS\n    colorBackgroundMain: '#ffffff',\n    colorFontFirst: '#2b2d38',\n    colorFontSecond: '#71778e',\n    colorGradient: 'linear-gradient(45deg, #d350db, #57438a 70%, #d350db)',\n    colorGradientInvert: 'linear-gradient(45deg, #57438a, #d350db, #57438a)',\n    closeButtonGradient: 'linear-gradient(to bottom, #d5b8e2 0%, #8b48ac 50%, #a18daa 100%)',\n\n    colorNoteBackgroundWarning: 'rgba(240, 199, 40, .9)',\n    colorNoteBackgroundError: 'rgba(243, 102, 48, .9)',\n    colorNoteBackgroundSuccess: 'rgba(139, 195, 74, .8)',\n    colorNoteTextWarning: '#543e19',\n    colorNoteTextError: '#7d1d1d',\n    colorNoteTextSuccess: 'rgb(61, 136, 64)',\n\n    deepBlue: '#b9b9b9',\n    green: '#008080',\n    white: '#ffffff',\n    red: '#d350db',\n    trueRed: '#ff2b2b',\n    gay: '#d6d6d6',\n    lightGay: '#dedede82',\n\n\n    // FONT SIZES\n    extraSmallFont: '1em',\n    smallFont: '1.3em',\n    middleFont: '1.5em',\n    largeFont: '2em',\n    extraLargeFont: '2.5em',\n\n    // SIZES\n    widthContainerLarge: '1220px',\n    widthContainerSmall: '757px',\n    paddingSmall: '1em',\n    paddingMiddle: '1.5em',\n    paddingLarge: '2em',\n    lineHeight: '1.7em',\n    lineHeightMiddle: '1.2em',\n\n    // OTHER\n    borderRadius: '4px',\n    boxShadow: '0 0 40px 0px rgba(199,199,199,.9)',\n    boxShadowSmall: '0 0 3px 3px #d2d1d1e6',\n    boxShadowXSmall: '0 2px 3px 2px #d2d1d182',\n    boxShadowSmallInvert: '0 0 3px 0 #c7c7c7e6',\n};\n\nexport default variables;","import variables from '../../styles/variables';\n\nconst HeaderStyles = {\n    main: {\n        width: '100%',\n        color: variables.colorFontSecond,\n        maxWidth: variables.widthContainerLarge,\n        padding: `${variables.paddingMiddle} ${variables.paddingSmall}`,\n        textAlign: 'center',\n        lineHeight: variables.lineHeight\n    },\n    logo: {\n        width: '100px',\n        height: '100px'\n    },\n    mainDesktop: { fontSize: '22px' },\n    mainMobile: { fontSize: '14px' }\n};\n\nexport default HeaderStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport HeaderStyles from './HeaderStyles';\nimport logo from './assets/logo.svg';\n\nconst Header = ({ deviceType }) => {\n    return (\n        <header\n            style={{\n                ...HeaderStyles.main,\n                ...HeaderStyles[`main${deviceType}`]\n            }}\n        >\n            <img style={HeaderStyles.logo} src={logo} alt=\"Currency exchange\" />\n            <h1>Exchange rate for BTC / LTC and etc.</h1>\n        </header>\n    );\n};\n\nHeader.defaultName = 'Header';\nHeader.propTypes = {\n    deviceType: PropTypes.string\n};\nHeader.defaultProps = {\n    deviceType: 'Desktop'\n};\n\nexport default Header;\n","import Header from './Header';\n\nexport default Header;","const Config = {\n    // Detect prod or dev environment\n    isDev:\n        window &&\n        window.location &&\n        window.location.hostname &&\n        window.location.hostname === 'localhost',\n\n    // External API endpoint\n    apiUrl: 'https://api.cryptonator.com/api',\n\n    // Affiliate link in footer\n    affiliateLink: {\n        name: 'cryptonator.com',\n        link: 'https://www.cryptonator.com/'\n    },\n\n    // Point for  styles\n    breakpoint: 768,\n\n    // Currencies on with you can check price base currency\n    currencies: {\n        fiat: [\n            { shortName: 'USD', code: 'USD', name: 'US Dollar' },\n            { shortName: 'EUR', code: 'EUR', name: 'Euro' },\n            { shortName: 'PLN', code: 'PLN', name: 'Polish zlotys' },\n            { shortName: 'RUB', code: 'RUR', name: 'Ruble' }\n        ],\n        crypto: [\n            { shortName: 'BTC', code: 'BTC', name: 'Bitcoin' },\n            { shortName: 'ETH', code: 'ETH', name: 'Ethereum' },\n            { shortName: 'LTC', code: 'LTC', name: 'Litecoin' },\n            { shortName: 'BCH', code: 'BCH', name: 'Bitcoin cash' },\n            { shortName: 'XRP', code: 'XRP', name: 'Ripple' },\n            { shortName: 'DASH', code: 'DASH', name: 'Dash' },\n            { shortName: 'XMR', code: 'XMR', name: 'Monero' }\n        ]\n    }\n};\n\nexport default Config;\n","const Helpers = {\n    getRandomNumber: prefix => {\n        let number = Math.floor((1 + Math.random()) * 0x10000000).toString(16);\n        return prefix ? `${prefix}-${number}` : number;\n    }\n};\n\nconst MobileDeviceDetector = () =>\n    /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n\nexport { Helpers, MobileDeviceDetector };\n","import Config from './config';\nimport { Helpers } from './helpers';\n\nclass Api {\n    constructor() {\n        this.apiUrl = Config.apiUrl;\n    }\n\n    _changeUpDetection(change) {\n        return change < 0;\n    }\n\n    _countPercentage(change, price) {\n        let percents = change / (price / 100);\n        let result = '';\n\n        if (percents < 1) {\n            result = percents.toString().replace('-', '');\n            result = result < 1 ? '< 1' : (+result).toFixed(2);\n        } else {\n            result = percents.toFixed(2);\n        }\n        return result;\n    }\n\n    _prettyPriceFormat(price) {\n        let convertedPrice = price;\n\n        if (convertedPrice > 1) {\n            convertedPrice = (+convertedPrice).toFixed(4);\n            convertedPrice = convertedPrice.toString();\n            convertedPrice = convertedPrice.split('.');\n\n            let firstPart = convertedPrice[0];\n            firstPart = firstPart\n                .split('')\n                .reverse()\n                .join('');\n            firstPart = firstPart.match(/.{1,3}/g);\n\n            firstPart = firstPart.map(item => {\n                return item + ',';\n            });\n\n            firstPart = firstPart\n                .join('')\n                .split('')\n                .reverse();\n            firstPart.shift();\n            convertedPrice = `${firstPart.join('')}.${convertedPrice[1]}`;\n        }\n\n        return convertedPrice;\n    }\n\n    get getBaseCurrenciesList() {\n        return [...Config.currencies.crypto];\n    }\n\n    get getTargetCurrenciesList() {\n        return [...Config.currencies.fiat, ...Config.currencies.crypto];\n    }\n\n    get getAffiliateLink() {\n        return { ...Config.affiliateLink };\n    }\n\n    currencyRate(currencyCoinOne, currencyCoinTwo) {\n        let baseCoin = currencyCoinOne.toLowerCase();\n        let targetCoin = currencyCoinTwo.toLowerCase();\n\n        return fetch(`${this.apiUrl}/ticker/${baseCoin}-${targetCoin}`, {\n            method: 'GET'\n        })\n            .then(resp => resp.json())\n            .then(resp => resp['ticker'])\n            .then(resp => ({\n                id: Helpers.getRandomNumber('api'),\n                base: resp.base,\n                target: resp.target,\n                price: this._prettyPriceFormat(resp.price),\n                change: resp.change,\n                changePercents: this._countPercentage(resp.change, resp.price),\n                changeUp: !this._changeUpDetection(resp.change)\n            }));\n    }\n}\n\nexport default new Api();\n","import variables from '../../styles/variables';\n\nconst FooterStyles = {\n    footer: {\n        width: '100%',\n        maxWidth: variables.widthContainerLarge,\n        padding: `${variables.paddingLarge} ${variables.paddingSmall}`,\n        textAlign: 'center'\n    },\n    text: {\n        color: variables.colorFontSecond,\n        fontSize: '15px'\n    },\n    link: {\n        color: variables.colorFontSecond,\n        fontWeight: '500'\n    }\n};\n\nexport default FooterStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Api from '../../config/Api';\nimport FooterStyles from './FooterStyles';\n\nconst { name, link } = Api.getAffiliateLink;\n\nconst Footer = ({ deviceType }) => (\n    <footer style={FooterStyles.footer}>\n        <p\n            style={{\n                ...FooterStyles.text,\n                ...FooterStyles[`text${deviceType}`]\n            }}\n        >\n            Currency rate information provided by &nbsp;\n            <a target=\"_blank\" style={FooterStyles.link} href={link} rel=\"noopener noreferrer\">\n                {name}\n            </a>\n        </p>\n    </footer>\n);\n\nFooter.defaultName = 'Footer';\nFooter.propTypes = {\n    deviceType: PropTypes.string\n};\nFooter.defaultProps = {\n    deviceType: 'Desktop'\n};\n\nexport default Footer;\n","import Footer from './Footer';\n\nexport default Footer;","const helpers = {\n    textCenter: {\n        textAlign: 'center',\n    },\n};\n\nexport default helpers;","import variables from '../../styles/variables';\n\nconst CurrencyRowStyles = {\n    row: { lineHeight: '3.2em' },\n    titleLarge: { verticalAlign: 'middle' },\n    titleLargeDesktop: { fontSize: variables.largeFont },\n    titleLargeMobile: { fontSize: variables.middleFont },\n    text: {\n        fontWeight: '300',\n        verticalAlign: 'middle'\n    },\n    textDesktop: { fontSize: variables.largeFont },\n    textMobile: { fontSize: variables.middleFont },\n    smallText: {\n        fontWeight: '300',\n        paddingLeft: '10px'\n    },\n    smallTextDesktop: { fontSize: variables.middleFont },\n    smallTextMobile: { fontSize: variables.smallFont },\n    arrow: {\n        fontSize: variables.extraLargeFont,\n        position: 'relative'\n    },\n    changeMobile: { display: 'none' },\n    closeButton: {\n        fontSize: variables.middleFont,\n        padding: 0,\n        margin: 0,\n        border: 0,\n        verticalAlign: 'middle',\n        lineHeight: 1,\n        cursor: 'pointer',\n        position: 'relative',\n        top: '-2px',\n        opacity: '.4',\n        background: 'transparent'\n    }\n};\n\nexport default CurrencyRowStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\nimport variables from '../../styles/variables';\nimport helpers from '../../styles/helpers';\nimport CurrencyRowStyles from './CurrencyRowStyles';\n\nclass CurrencyRow extends React.Component {\n    constructor(props) {\n        super(props);\n        this.animationDuration = 300;\n        this.state = {\n            animateStyle: {\n                transition: `all ${this.animationDuration}ms ease`,\n                opacity: 0\n            }\n        };\n    }\n\n    mountStyle = () => {\n        this.setState(prevState => ({\n            animateStyle: {\n                ...prevState.animateStyle,\n                opacity: 1\n            }\n        }));\n    };\n\n    unMountStyle = () => {\n        this.setState(prevState => ({\n            animateStyle: {\n                ...prevState.animateStyle,\n                opacity: 0\n            }\n        }));\n    };\n\n    removeCurrenciesPair = (removeParentMethod, hideRemoveButton = false) => {\n        if (hideRemoveButton) return;\n\n        this.unMountStyle();\n        setTimeout(() => removeParentMethod(), this.animationDuration + 20);\n    };\n\n    componentWillMount() {\n        setTimeout(() => this.mountStyle(), 10);\n    }\n\n    render() {\n        const {\n            base,\n            target,\n            price,\n            change,\n            changeUp,\n            changePercents,\n            hideRemoveButton,\n            removeCurrenciesPair,\n            deviceType\n        } = this.props;\n        let changeIndicator = {\n            color: changeUp ? variables.green : variables.red,\n            icon: changeUp ? 'angle-up' : 'angle-down',\n            styles: changeUp ? { top: '3px' } : { top: '5px' }\n        };\n\n        return (\n            <tr\n                style={{\n                    ...this.state.animateStyle,\n                    ...CurrencyRowStyles.row\n                }}\n            >\n                <td>\n                    <span\n                        style={{\n                            ...CurrencyRowStyles.text,\n                            ...CurrencyRowStyles[`text${deviceType}`]\n                        }}\n                    >\n                        {base} / {target}\n                    </span>\n                </td>\n                <td>\n                    <span\n                        style={{\n                            ...CurrencyRowStyles.titleLarge,\n                            ...CurrencyRowStyles[`titleLarge${deviceType}`]\n                        }}\n                    >\n                        {price}\n                    </span>\n                </td>\n                <td style={helpers.textCenter}>\n                    {/* Arrow indicator */}\n                    <span style={CurrencyRowStyles.text}>\n                        <FontAwesome\n                            style={{\n                                ...CurrencyRowStyles.arrow,\n                                ...changeIndicator.styles,\n                                color: changeIndicator.color\n                            }}\n                            name={changeIndicator.icon}\n                        />\n                    </span>\n                </td>\n                <td>\n                    {/* Change */}\n                    <span\n                        style={{\n                            color: changeIndicator.color,\n                            ...CurrencyRowStyles.smallText,\n                            ...CurrencyRowStyles[`smallText${deviceType}`],\n                            ...CurrencyRowStyles[`change${deviceType}`]\n                        }}\n                    >\n                        {change}\n                    </span>\n\n                    {/* Change percents */}\n                    <span\n                        style={{\n                            ...CurrencyRowStyles.smallText,\n                            ...CurrencyRowStyles[`smallText${deviceType}`],\n                            color: changeIndicator.color\n                        }}\n                    >\n                        ({changePercents}%)\n                    </span>\n                </td>\n                <td>\n                    {/* Remove button */}\n                    <button\n                        style={{\n                            visibility: hideRemoveButton && 'hidden',\n                            ...CurrencyRowStyles.closeButton\n                        }}\n                        onClick={e =>\n                            this.removeCurrenciesPair(removeCurrenciesPair, hideRemoveButton)\n                        }\n                    >\n                        <FontAwesome name=\"times-circle\" />\n                    </button>\n                </td>\n            </tr>\n        );\n    }\n}\n\nCurrencyRow.defaultName = 'CurrencyRow';\nCurrencyRow.propTypes = {\n    change: PropTypes.string.isRequired,\n    price: PropTypes.string.isRequired,\n    changeUp: PropTypes.bool.isRequired,\n    changePercents: PropTypes.string.isRequired,\n    hideRemoveButton: PropTypes.bool,\n    removeCurrenciesPair: PropTypes.func.isRequired,\n    base: PropTypes.string,\n    target: PropTypes.string,\n    deviceType: PropTypes.string\n};\nCurrencyRow.defaultProps = {\n    base: 'BTC',\n    target: 'USD',\n    hideRemoveButton: true,\n    deviceType: 'Desktop'\n};\n\nexport default CurrencyRow;\n","import CurrencyRow from './CurrencyRow';\n\nexport default CurrencyRow;","import variables from '../../styles/variables';\n\nconst CurrenciesPairsStyles = {\n    table: {\n        minWidth: '450px',\n        width: '100%'\n    },\n    spinnerWrapper: {\n        textAlign: 'center',\n        lineHeight: '3.4em'\n    },\n    spinner: {\n        verticalAlign: 'middle',\n        fontSize: variables.middleFont\n    },\n    tableWrapperDesktop: {},\n    tableWrapperMobile: {\n        border: `1px solid ${variables.gay}`,\n        padding: '0 1em',\n        overflowX: 'auto',\n        boxSizing: 'border-box',\n        borderRadius: variables.borderRadius\n    },\n    errorMsg: {\n        color: variables.trueRed,\n        fontWeight: '100',\n        textAlign: 'center'\n    }\n};\n\nexport default CurrenciesPairsStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CurrencyRow from '../CurrencyRow';\nimport FontAwesome from 'react-fontawesome';\nimport CurrenciesPairsStyles from './CurrenciesPairsStyles';\n\nconst CurrenciesPairs = ({\n    showThrobber,\n    currenciesPairs,\n    removeCurrenciesPair,\n    deviceType,\n    hasError\n}) => (\n    <div style={{ ...CurrenciesPairsStyles[`tableWrapper${deviceType}`] }}>\n        <table style={CurrenciesPairsStyles.table}>\n            <tbody>\n                {/* Currency row */}\n                {currenciesPairs.map(currenciesRow => (\n                    <CurrencyRow\n                        deviceType={deviceType}\n                        key={currenciesRow.id}\n                        change={currenciesRow.change}\n                        changeUp={currenciesRow.changeUp}\n                        changePercents={currenciesRow.changePercents}\n                        base={currenciesRow.base}\n                        target={currenciesRow.target}\n                        price={currenciesRow.price}\n                        hideRemoveButton={currenciesPairs.length === 1}\n                        removeCurrenciesPair={() => removeCurrenciesPair(currenciesRow.id)}\n                    />\n                ))}\n\n                {(showThrobber || hasError) && (\n                    <tr>\n                        <td colSpan=\"5\" style={CurrenciesPairsStyles.spinnerWrapper}>\n                            {/* API error */}\n                            {hasError && (\n                                <h2 style={CurrenciesPairsStyles.errorMsg}>\n                                    Sorry, some server error. Try again later.\n                                </h2>\n                            )}\n\n                            {/* Throbber */}\n                            {showThrobber && !hasError && (\n                                <FontAwesome\n                                    style={CurrenciesPairsStyles.spinner}\n                                    name=\"spinner\"\n                                    spin\n                                />\n                            )}\n                        </td>\n                    </tr>\n                )}\n            </tbody>\n        </table>\n    </div>\n);\n\nCurrenciesPairs.defaultName = 'CurrenciesPairs';\nCurrenciesPairs.propTypes = {\n    showThrobber: PropTypes.bool,\n    currenciesPairs: PropTypes.array.isRequired,\n    removeCurrenciesPair: PropTypes.func.isRequired,\n    deviceType: PropTypes.string,\n    hasError: PropTypes.bool\n};\nCurrenciesPairs.defaultProps = {\n    showThrobber: false,\n    deviceType: 'Desktop',\n    hasError: false\n};\n\nexport default CurrenciesPairs;\n","import CurrenciesPairs from './CurrenciesPairs';\n\nexport default CurrenciesPairs;","import variables from './variables';\n\nconst button = {\n    gradientMiddle: {\n        color: variables.white,\n        boxShadow: variables.boxShadowSmall,\n        cursor: 'pointer',\n        backgroundImage: variables.colorGradient,\n        backgroundPosition: '0 0',\n        backgroundSize: '300% 300%',\n        fontSize: '17px',\n        fontWeight: 300,\n        padding: '13px 23px',\n        border: 'none',\n        borderRadius: '30px',\n        textTransform: 'uppercase',\n    },\n};\n\nexport default button;","import variables from '../../styles/variables';\n\nconst SearchInputSuggestBoxStyles = {\n    list: {\n        margin: 0,\n        padding: 0,\n        position: 'absolute',\n        background: variables.white,\n        boxShadow: variables.boxShadowXSmall,\n        borderBottomRightRadius: variables.borderRadius,\n        borderBottomLeftRadius: variables.borderRadius,\n        overflowY: 'auto',\n        left: '10%',\n        width: '80%',\n        zIndex: 1\n    },\n    listDesktop: { maxHeight: '230px' },\n    listMobile: { maxHeight: '160px' },\n    item: { padding: '0.5em 0.7em' },\n    itemPointer: {\n        cursor: 'pointer',\n        padding: '0.5em 0.7em'\n    }\n};\n\nexport default SearchInputSuggestBoxStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport variables from '../../styles/variables';\nimport SearchInputSuggestBoxStyles from './SearchInputSuggestBoxStyles';\n\nclass SearchInputSuggestBox extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            itemsForShowing: [],\n            activeItem: 0,\n            showSuggestBox: false\n        };\n        this.listItems = [];\n    }\n\n    setActiveItemState = newState => {\n        this.setState({ activeItem: newState }, () => this.setHoverStyle(this.state.activeItem));\n    };\n\n    setHoverStyle = () => {\n        if (!this.listItems.length) {\n            return;\n        }\n\n        this.listItems.forEach((item, index) => {\n            if (item === null) return;\n            item.style.backgroundColor =\n                this.state.activeItem === index ? variables.lightGay : variables.white;\n        });\n    };\n\n    calcList = (items, inputValue) => {\n        // Create regexp by using 'inputValue' from parent\n        let reg = new RegExp(inputValue.toLocaleLowerCase());\n        // Filtered match 'inputValue' substr in 'items' array\n        let newItems = items.filter(item => {\n            return (\n                reg.test(item.shortName.toLocaleLowerCase()) ||\n                reg.test(item.name.toLocaleLowerCase())\n            );\n        });\n\n        // Update state\n        if (inputValue.search('-') + 1) {\n            return;\n        }\n        this.setState({\n            itemsForShowing: newItems\n        });\n    };\n\n    selectItemInCoinList = moveDirection => {\n        let newState = 0;\n\n        if (!moveDirection) {\n            return;\n        }\n\n        // Is it not last item in list?\n        if (moveDirection === 'ArrowUp') {\n            newState = this.state.activeItem <= 0 ? 0 : this.state.activeItem - 1;\n        } else if (moveDirection === 'ArrowDown') {\n            newState =\n                this.state.activeItem + 1 >= this.listItems.length\n                    ? this.state.activeItem\n                    : this.state.activeItem + 1;\n        } else if (moveDirection === 'Enter') {\n            let coin = this.listItems[this.state.activeItem];\n            coin.click();\n        }\n        this.setActiveItemState(newState);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        this.calcList(this.props.items, nextProps.inputValue);\n\n        // mark first item in list\n        if (nextProps.showSuggestBox) {\n            setTimeout(() => this.setHoverStyle(), 10);\n        } else {\n            this.setActiveItemState(0);\n        }\n        // open drop down\n        this.setState({\n            showSuggestBox: nextProps.showSuggestBox\n        });\n        if (\n            this.state.showSuggestBox === nextProps.showSuggestBox &&\n            nextProps.keyboardButtonsActive === 'Enter'\n        ) {\n            return;\n        }\n        this.selectItemInCoinList(nextProps.keyboardButtonsActive);\n    }\n\n    render() {\n        const { setSelectedItem, deviceType } = this.props;\n\n        return (\n            <ul\n                style={{\n                    ...SearchInputSuggestBoxStyles.list,\n                    ...SearchInputSuggestBoxStyles[`list${deviceType}`],\n                    display: this.state.showSuggestBox ? 'block' : 'none'\n                }}\n            >\n                {this.state.itemsForShowing.map((item, index) => (\n                    <li\n                        style={SearchInputSuggestBoxStyles.itemPointer}\n                        key={item.code}\n                        ref={el => (this.listItems[index] = el)}\n                        onMouseEnter={() => this.setActiveItemState(index)}\n                        onClick={() => setSelectedItem(item.code, `${item.code} - ${item.name}`)}\n                    >\n                        {item.code} - {item.name}\n                    </li>\n                ))}\n\n                {/* No results */}\n                {this.state.itemsForShowing.length === 0 && (\n                    <li style={SearchInputSuggestBoxStyles.item}>No results</li>\n                )}\n            </ul>\n        );\n    }\n}\n\nSearchInputSuggestBox.defaultName = 'SearchInputSuggestBox';\nSearchInputSuggestBox.propTypes = {\n    setSelectedItem: PropTypes.func.isRequired,\n    keyboardButtonsActive: PropTypes.string,\n    showSuggestBox: PropTypes.bool,\n    inputValue: PropTypes.string,\n    deviceType: PropTypes.string,\n    items: PropTypes.array\n};\nSearchInputSuggestBox.defaultProps = {\n    keyboardButtonsActive: '',\n    inputValue: '',\n    items: [],\n    deviceType: 'Desktop'\n};\n\nexport default SearchInputSuggestBox;\n","import SearchInputSuggestBox from './SearchInputSuggestBox';\n\nexport default SearchInputSuggestBox;","import variables from '../../styles/variables';\n\nconst SearchInputStyles = {\n    fieldSet: {\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        position: 'relative'\n    },\n    input: {\n        border: `1px solid ${variables.gay}`,\n        fontSize: '17px',\n        width: '100%',\n        fontWeight: 300,\n        padding: '13px 23px',\n        borderRadius: '30px',\n        position: 'relative'\n    }\n};\n\nexport default SearchInputStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport SearchInputSuggestBox from '../SearchInputSuggestBox';\nimport SearchInputStyles from './SearchInputStyles';\n\nclass SearchInput extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue: '',\n            showSuggestBox: false,\n            clearInput: true,\n            keyboardButtonsActive: ''\n        };\n    }\n\n    handleChange = event => {\n        // Set input value\n        this.setState({\n            inputValue: event.target.value\n        });\n    };\n\n    handleKeyboard = event => {\n        this.setState({\n            keyboardButtonsActive: event.key\n        });\n\n        if (event.key === 'Enter') {\n            event.preventDefault();\n\n            this.setState(prevState => ({\n                showSuggestBox: !prevState.showSuggestBox\n            }));\n        }\n    };\n\n    focusInputStatus = isFocus => {\n        setTimeout(() => {\n            if (this.state.clearInput) {\n                this.setState({\n                    inputValue: '',\n                    keyboardButtonsActive: ''\n                });\n            }\n            this.setState({\n                showSuggestBox: isFocus,\n                clearInput: true\n            });\n        }, 10);\n    };\n\n    setSelectedItem = (coinName, fullCurrencyName) => {\n        this.setState({\n            inputValue: fullCurrencyName,\n            clearInput: false\n        });\n        this.props.setValue(coinName);\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if (nextProps.clearInput) {\n            this.setState({ inputValue: '' });\n        }\n    }\n\n    render() {\n        const { items, label, deviceType } = this.props;\n\n        return (\n            <fieldset style={SearchInputStyles.fieldSet}>\n                {/* Text field */}\n                <input\n                    style={SearchInputStyles.input}\n                    placeholder={label}\n                    onFocus={() => this.focusInputStatus(true)}\n                    onClick={() => this.focusInputStatus(true)}\n                    onBlur={() => this.focusInputStatus(false)}\n                    onChange={this.handleChange}\n                    onKeyDown={this.handleKeyboard}\n                    value={this.state.inputValue}\n                    type=\"text\"\n                />\n\n                {/* Suggestions */}\n                <SearchInputSuggestBox\n                    deviceType={deviceType}\n                    showSuggestBox={this.state.showSuggestBox}\n                    setSelectedItem={this.setSelectedItem}\n                    inputValue={this.state.inputValue}\n                    keyboardButtonsActive={this.state.keyboardButtonsActive}\n                    items={items}\n                />\n            </fieldset>\n        );\n    }\n}\n\nSearchInput.defaultName = 'SearchInput';\nSearchInput.propTypes = {\n    items: PropTypes.array,\n    deviceType: PropTypes.string,\n    setValue: PropTypes.func.isRequired,\n    label: PropTypes.string\n};\nSearchInput.defaultProps = {\n    items: [],\n    label: '',\n    deviceType: 'Desktop'\n};\n\nexport default SearchInput;\n","import SearchInput from './SearchInput';\n\nexport default SearchInput;","import variables from '../../styles/variables';\n\nconst AddCurrenciesListStyles = {\n    formMobile: { display: 'block' },\n    formDesktop: { display: 'flex' },\n    form: { margin: `${variables.paddingMiddle} 0` },\n    fieldSet: {\n        flexGrow: 1,\n        border: 'none',\n        padding: 0\n    },\n    fieldSetMobile: { marginBottom: '1em' },\n    fieldSetDesktop: { marginRight: '1em' },\n    buttonMobile: { width: '100%' },\n    buttonDesktop: {}\n};\n\nexport default AddCurrenciesListStyles;\n","import AddNewCurrency from './AddNewCurrency';\n\nexport default AddNewCurrency;","import React from 'react';\nimport buttons from '../../styles/buttons';\nimport variables from '../../styles/variables';\nimport SearchInput from '../../components/SearchInput';\nimport AddCurrenciesListStyles from './AddNewCurrencyStyles';\n\nclass AddNewCurrency extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            clearInput: false\n        };\n    }\n\n    buttonAnimation(e, eventType, isFirstPartEvent) {\n        let button = e.target;\n        let animationOptions = {\n            easing: 'ease-in-out',\n            iterations: '1',\n            fill: 'forwards'\n        };\n        let cssProperty;\n\n        switch (eventType) {\n            case 'click':\n                // Click animation\n                let boxShadow;\n\n                if (isFirstPartEvent) {\n                    boxShadow = [variables.boxShadowSmall, variables.boxShadowSmallInvert];\n                } else {\n                    boxShadow = [variables.boxShadowSmallInvert, variables.boxShadowSmall];\n                }\n                animationOptions.duration = 100;\n                cssProperty = { boxShadow };\n                break;\n            case 'hover':\n                // Hover animation\n                let backgroundPosition;\n\n                if (isFirstPartEvent) {\n                    backgroundPosition = ['0 0', '100% 0'];\n                } else {\n                    backgroundPosition = ['100% 0', '0 0'];\n                }\n\n                animationOptions.duration = 800;\n                cssProperty = { backgroundPosition };\n                break;\n            default:\n                break;\n        }\n\n        button.animate({ ...cssProperty }, animationOptions);\n    }\n\n    addNewCurrenciesPair = event => {\n        this.props.addNewCurrenciesPair(event);\n        this.setState({\n            clearInput: true\n        });\n        setTimeout(\n            () =>\n                this.setState({\n                    clearInput: false\n                }),\n            10\n        );\n    };\n\n    render() {\n        const { setCoin, baseCurrencies, targetCurrencies, deviceType } = this.props;\n\n        return (\n            <form\n                style={{\n                    ...AddCurrenciesListStyles.form,\n                    ...AddCurrenciesListStyles[`form${deviceType}`]\n                }}\n            >\n                {/* Base coin */}\n                <div\n                    style={{\n                        ...AddCurrenciesListStyles.fieldSet,\n                        ...AddCurrenciesListStyles[`fieldSet${deviceType}`]\n                    }}\n                >\n                    <SearchInput\n                        deviceType={deviceType}\n                        label=\"Base coin\"\n                        clearInput={this.state.clearInput}\n                        items={baseCurrencies}\n                        setValue={(coinName, isBaseCoin = true) => {\n                            setCoin(coinName, isBaseCoin);\n                        }}\n                    />\n                </div>\n\n                {/* Target coin */}\n                <div\n                    style={{\n                        ...AddCurrenciesListStyles.fieldSet,\n                        ...AddCurrenciesListStyles[`fieldSet${deviceType}`]\n                    }}\n                >\n                    <SearchInput\n                        deviceType={deviceType}\n                        label=\"Target coin\"\n                        clearInput={this.state.clearInput}\n                        items={targetCurrencies}\n                        setValue={(coinName, isBaseCoin = false) => {\n                            setCoin(coinName, isBaseCoin);\n                        }}\n                    />\n                </div>\n\n                {/* Button */}\n                <button\n                    style={{\n                        ...buttons.gradientMiddle,\n                        ...AddCurrenciesListStyles[`button${deviceType}`]\n                    }}\n                    onMouseOver={e => this.buttonAnimation(e, 'hover', true)}\n                    onMouseLeave={e => this.buttonAnimation(e, 'hover', false)}\n                    onMouseDown={e => this.buttonAnimation(e, 'click', true)}\n                    onMouseUp={e => this.buttonAnimation(e, 'click', false)}\n                    onClick={this.addNewCurrenciesPair}\n                >\n                    add pair +\n                </button>\n            </form>\n        );\n    }\n}\n\nexport default AddNewCurrency;\n","import variables from '../../styles/variables';\n\nconst NotificationStyles = {\n    wrapper: {\n        overflow: 'hidden',\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    container: {\n        height: '70px',\n        display: 'flex',\n        alignItems: 'center',\n        position: 'relative',\n        justifyContent: 'center',\n        padding: `${variables.paddingSmall} ${variables.paddingLarge}`,\n        verticalAlign: 'middle',\n        borderRadius: variables.borderRadius,\n        fontSize: variables.extraSmallFont,\n        fontWeight: '400',\n        lineHeight: variables.lineHeightMiddle,\n        marginBottom: variables.paddingSmall\n    },\n    warningType: {\n        color: variables.colorNoteTextWarning,\n        backgroundColor: variables.colorNoteBackgroundWarning\n    },\n    errorType: {\n        color: variables.colorNoteTextError,\n        backgroundColor: variables.colorNoteBackgroundError\n    },\n    successType: {\n        color: variables.colorNoteTextSuccess,\n        backgroundColor: variables.colorNoteBackgroundSuccess\n    },\n    warningSign: { color: '#a58613' },\n    errorSign: { color: '9e0b0b' },\n    sign: {\n        transform: 'translateX(-0.8em)'\n    },\n    closeButton: {\n        cursor: 'pointer',\n        fontSize: '1.2em',\n        position: 'absolute',\n        top: '-3px',\n        right: '0',\n        border: 'none',\n        backgroundColor: 'transparent'\n    }\n};\n\nexport default NotificationStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FontAwesome from 'react-fontawesome';\n\nimport NotificationStyles from './NotificationStyles';\n\nclass Notification extends React.Component {\n    constructor(props) {\n        super(props);\n        this.dismissTimeout = 3000;\n    }\n\n    componentDidMount() {\n        setTimeout(() => this.props.dismiss(null, this.props.id), this.dismissTimeout);\n    }\n\n    render() {\n        let { id, content, type, dismiss } = this.props;\n\n        return (\n            <div style={NotificationStyles.wrapper}>\n                <div\n                    style={{\n                        ...NotificationStyles[`${type}Type`],\n                        ...NotificationStyles.container\n                    }}\n                >\n                    {/* Close button */}\n                    <button onClick={e => dismiss(e, id)} style={NotificationStyles.closeButton}>\n                        &times;\n                    </button>\n\n                    {/* Content */}\n\n                    <FontAwesome\n                        name={type === 'warning' ? 'exclamation-triangle' : 'exclamation-circle'}\n                        style={{ ...NotificationStyles.sign, ...NotificationStyles[`${type}Sign`] }}\n                    />\n                    {content}\n                </div>\n            </div>\n        );\n    }\n}\n\nNotification.defaultName = 'Notification';\nNotification.propTypes = {\n    id: PropTypes.string.isRequired,\n    content: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    dismiss: PropTypes.func.isRequired\n};\n\nexport default Notification;\n","import Notification from './Notification';\n\nexport default Notification;","import variables from '../../styles/variables';\n\nconst NotificationListStyles = {\n    maxWidth: '100vw',\n    width: '400px',\n    position: 'fixed',\n    padding: `0 ${variables.paddingSmall}`,\n    bottom: 0,\n    left: '50%',\n    zIndex: 4,\n    transform: 'translateX(-50%)'\n};\n\nexport default NotificationListStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Notification from '../Notification';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nimport NotificationListStyles from './NotificationListStyles';\nimport './animation.css';\n\nconst NotificationList = ({ notifications, dismiss }) => (\n    <div style={NotificationListStyles}>\n        <ReactCSSTransitionGroup\n            transitionName=\"animation\"\n            transitionEnterTimeout={300}\n            transitionLeaveTimeout={300}\n        >\n            {notifications.map(noteParams => (\n                <Notification key={noteParams.id} dismiss={dismiss} {...noteParams} />\n            ))}\n        </ReactCSSTransitionGroup>\n    </div>\n);\n\nNotificationList.defaultName = 'NotificationList';\nNotificationList.propTypes = {\n    notifications: PropTypes.array,\n    dismiss: PropTypes.func.isRequired\n};\nNotificationList.defaultProps = {\n    notifications: []\n};\n\nexport default NotificationList;\n","import NotificationList from './NotificationList';\n\nexport default NotificationList;","const NotificationTypes = {\n    success: {\n        id: null,\n        type: 'success',\n        content: null,\n    },\n    warning: {\n        id: null,\n        type: 'warning',\n        content: null,\n    },\n    error: {\n        id: null,\n        type: 'error',\n        content: null,\n    },\n};\n\nexport default NotificationTypes;","import variables from '../../styles/variables';\n\nconst MainStyles = {\n    container: {\n        flexGrow: 1,\n        width: '100%',\n        maxWidth: variables.widthContainerSmall,\n        backgroundColor: variables.white,\n        borderRadius: variables.borderRadius,\n        boxShadow: variables.boxShadow\n    },\n    saveButton: {\n        background: variables.white,\n        fontSize: '30px',\n        width: '60px',\n        height: '60px',\n        borderRadius: '60px',\n        cursor: 'pointer',\n        border: `1px solid ${variables.gay}`\n    },\n    buttonWrapper: {\n        display: 'flex',\n        justifyContent: 'center'\n    },\n    containerDesktop: { padding: variables.paddingLarge },\n    containerMobile: { padding: variables.paddingSmall }\n};\n\nexport default MainStyles;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CurrenciesPairs from '../../components/CurrenciesPairs';\nimport AddNewCurrency from '../../components/AddNewCurrency';\nimport NotificationList from '../../components/NotificationList';\nimport { Helpers } from '../../config/helpers';\nimport NotificationsType from '../../config/notification-types';\nimport FontAwesome from 'react-fontawesome';\nimport Api from '../../config/Api';\nimport MainStyles from './MainStyles';\n\nclass Main extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            currenciesPairs: [],\n            baseCurrencies: [],\n            targetCurrencies: [],\n            baseCoin: '',\n            targetCoin: '',\n            notifications: [],\n            showThrobber: true,\n            hasError: false\n        };\n    }\n\n    // Add new currencies pair row with\n    addNewCurrenciesPair = (\n        e,\n        baseCoin = this.state.baseCoin,\n        targetCoin = this.state.targetCoin\n    ) => {\n        if (e) {\n            e.preventDefault();\n        }\n\n        if (!baseCoin || !targetCoin) {\n            this.showNotification('Please, provide correct Base and Target coins', 'error');\n\n            // Clear inputs with coins\n            this.setState({\n                baseCoin: '',\n                targetCoin: ''\n            });\n            return;\n        }\n\n        // Check if you have added same pair\n        if (this.hasSamePair({ base: baseCoin, target: targetCoin }, this.state.currenciesPairs)) {\n            this.showNotification(`You already have ${baseCoin}/${targetCoin} pair`, 'warning');\n\n            // Clear inputs with coins\n            this.setState({\n                baseCoin: '',\n                targetCoin: ''\n            });\n            return;\n        }\n\n        // Check if set same coin for both inputs\n        if (baseCoin === targetCoin) {\n            this.showNotification(`You can't set same coin for both inputs`, 'warning');\n\n            // Clear inputs with coins\n            this.setState({\n                baseCoin: '',\n                targetCoin: ''\n            });\n            return;\n        }\n\n        // Show throbber\n        this.setState({\n            showThrobber: true\n        });\n\n        Api.currencyRate(baseCoin, targetCoin)\n            .then(resp => {\n                this.setState(prevState => ({\n                    currenciesPairs: [...prevState.currenciesPairs, resp],\n                    showThrobber: false,\n                    baseCoin: '',\n                    targetCoin: ''\n                }));\n            })\n            .catch(() => {\n                this.setState({\n                    hasError: true\n                });\n            });\n    };\n\n    // Show notification\n    showNotification(notificationText, type) {\n        let typeStyles;\n\n        switch (type) {\n            case 'success':\n                typeStyles = NotificationsType.success;\n                break;\n            case 'error':\n                typeStyles = NotificationsType.error;\n                break;\n            default:\n                typeStyles = NotificationsType.warning;\n                break;\n        }\n\n        let notice = {\n            ...typeStyles,\n            // Add unique ID for every 'the same pair' notification\n            id: Helpers.getRandomNumber('main'),\n            content: notificationText\n        };\n\n        this.setState(prevState => {\n            let oldNotifications = prevState.notifications;\n\n            if (oldNotifications.length > 3) {\n                oldNotifications.shift();\n            }\n            return { notifications: [...oldNotifications, { ...notice }] };\n        });\n    }\n\n    // Return true if state have same currency pair\n    hasSamePair = (newPair, state) => {\n        for (let statePair of state) {\n            if (statePair.base === newPair.base && statePair.target === newPair.target) {\n                return true;\n            }\n        }\n    };\n\n    // Remove currencies pair row with\n    removeCurrenciesPair = id => {\n        this.setState(prevState => ({\n            currenciesPairs: prevState.currenciesPairs.filter(item => item.id !== id)\n        }));\n    };\n\n    // Set currencies list on selects\n    setCoin = (coinName, isBaseCoin) => {\n        if (isBaseCoin) {\n            this.setState({\n                baseCoin: coinName\n            });\n        } else {\n            this.setState({\n                targetCoin: coinName\n            });\n        }\n    };\n\n    // Close notifications\n    dismissNotification = (event, notificationId) => {\n        event && event.preventDefault();\n\n        this.setState(prevState => ({\n            notifications: prevState.notifications.filter(item => item.id !== notificationId)\n        }));\n    };\n\n    handleClickSaveButton = e => {\n        e.preventDefault();\n\n        localStorage.setItem('pairs', JSON.stringify(this.state.currenciesPairs));\n\n        this.showNotification(`You pairs successfully saved`, 'success');\n    };\n\n    setStartedCurrencies = (baseCoin, targetCoin) => {\n        let pairs = localStorage.getItem('pairs');\n\n        if (pairs) {\n            pairs = JSON.parse(pairs);\n            pairs.forEach(pair => {\n                this.addNewCurrenciesPair(null, pair.base, pair.target);\n            });\n        } else {\n            this.addNewCurrenciesPair(null, baseCoin, targetCoin);\n        }\n    };\n\n    componentDidMount() {\n        let baseList = Api.getBaseCurrenciesList;\n        let targetList = Api.getTargetCurrenciesList;\n\n        this.setState(prevState => ({\n            baseCurrencies: [...baseList],\n            targetCurrencies: [...targetList]\n        }));\n\n        this.setStartedCurrencies(baseList[0].code, targetList[0].code);\n    }\n\n    render() {\n        const { deviceType } = this.props;\n\n        return (\n            <main\n                style={{\n                    ...MainStyles.container,\n                    ...MainStyles[`container${deviceType}`]\n                }}\n            >\n                {/* Currencies list */}\n                <CurrenciesPairs\n                    hasError={this.state.hasError}\n                    deviceType={deviceType}\n                    currenciesPairs={this.state.currenciesPairs}\n                    showThrobber={this.state.showThrobber}\n                    removeCurrenciesPair={this.removeCurrenciesPair}\n                />\n\n                {/* Fields for new pairs */}\n                <AddNewCurrency\n                    deviceType={deviceType}\n                    baseCurrencies={this.state.baseCurrencies}\n                    targetCurrencies={this.state.targetCurrencies}\n                    addNewCurrenciesPair={this.addNewCurrenciesPair}\n                    setCoin={this.setCoin}\n                />\n\n                {localStorage && (\n                    <div style={MainStyles.buttonWrapper}>\n                        <button style={MainStyles.saveButton} onClick={this.handleClickSaveButton}>\n                            <FontAwesome name=\"save\" />\n                        </button>\n                    </div>\n                )}\n\n                {/* Notifications */}\n                <NotificationList\n                    dismiss={this.dismissNotification}\n                    notifications={this.state.notifications}\n                />\n            </main>\n        );\n    }\n}\n\nMain.defaultName = 'Main';\nMain.propTypes = {\n    deviceType: PropTypes.string\n};\nMain.defaultProps = {\n    deviceType: 'Desktop'\n};\n\nexport default Main;\n","import Main from './Main';\n\nexport default Main;","import variables from '../../styles/variables';\nimport mainBg from '../../assets/img/main-bg.png';\n\nconst AppStyles = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    minHeight: '100vh',\n    padding: `0 ${variables.paddingSmall}`,\n    backgroundColor: variables.colorBackgroundMain,\n    backgroundImage: `url(${mainBg})`,\n    backgroundSize: `250px`,\n    color: variables.colorFontFirst,\n    fontFamily: 'Roboto, sans-serif',\n    fontWeight: '300'\n};\n\nexport default AppStyles;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport Header from '../../layout/Header';\nimport Footer from '../../layout/Footer';\nimport Main from '../../layout/Main';\nimport Config from '../../config/config';\nimport AppStyles from './AppStyles';\nimport 'font-awesome/css/font-awesome.css';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            windowWidth: 0\n        };\n    }\n\n    getDeviceType = () => {\n        let deviceType = window.innerWidth < Config.breakpoint ? 'Mobile' : 'Desktop';\n        this.setState({ deviceType: deviceType });\n    };\n\n    componentDidMount() {\n        this.getDeviceType();\n        window.addEventListener('resize', this.getDeviceType);\n    }\n\n    render() {\n        return (\n            <section style={AppStyles}>\n                {/* Header */}\n                <Header deviceType={this.state.deviceType} />\n\n                {/* Main */}\n                <Main deviceType={this.state.deviceType} />\n\n                {/* Footer */}\n                <Footer deviceType={this.state.deviceType} />\n            </section>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}